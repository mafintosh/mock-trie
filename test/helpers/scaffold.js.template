const test = require('tape')
const Trie = require('../../trie')
const Reference = require('../helpers/reference')

async function applyOperations (trie) {
{{ operations }}
}

async function getTrie () {
  const trie = new Trie()
  applyOperations(trie)
  return trie
}

async function getReference () {
  const reference = new Reference()
  applyOperations(reference)
  return reference
}

function runTests () {
  test('trie should return {{ expectedKey }} -> {{ expectedValue }}', async t => {
    const trie = await getTrie()
    // Should return {{ expectedKey }} -> {{ expectedValue }}
    // Actually returns {{ expectedKey }} -> {{ actualValue }}
    await assertValid(t, trie)
  })
  test.skip('reference should return {{ expectedKey }} -> {{ expectedValue }}', async t => {
    const trie = await getReference()
    await assertValid(t, trie)
  })

  async function assertValid (t, trie) {
    const node = await trie.get('{{ expectedKey }}')
    const value = (node && node.value) ? node.value.value : null
    t.same(value, {{ expectedValueArg }}, 'getting {{ expectedKey }} returned {{ expectedValue }}')
    t.end()
  }
}

if (require.main === module) {
  runTests()
} else {
  module.exports = {
    getTrie,
    getReference
  }
}